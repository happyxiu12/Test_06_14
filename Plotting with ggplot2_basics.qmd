---
title: "Plotting with ggplot2"
date: "15-June-2023"
format: html
editor: visual
---

## Basics

```{r}
library(dplyr)
library(tidyr)
library(stringr)

library(ggplot2)
library(ggrepel)
library(patchwork)
```

\## input data iris

```{r}
data("iris")
head(iris)
```

##1.1 Building a plot

```{r}
p<- ggplot(data=iris)+
  geom_point(mapping=aes(x=Petal.Length,y=Petal.Width))
p
```

\## 1.2 Multiple geoms

```{r}
ggplot(data  = iris, aes ( Petal.Length,  Petal.Width))+
  geom_point()+
  geom_smooth(method = "lm")
```

##1.3 using colors (colors in aes means that keep the different colors for specise, but keep the same color for each specise with lm and points. we can keep a common regression line while keeping the colors for the points, we could specify color aesthetic only for geom_point by putting color to geom_point)

```{r}
ggplot(iris, aes(Petal.Length, Petal.Width, color = Species)) + 
  geom_point() +
  geom_smooth(method = "lm")
```

\## keep the common regression line for whole figure

```{r}
ggplot(data=iris,mapping=aes(x=Petal.Length,y=Petal.Width))+
  geom_point(aes(color=Species))+
  geom_smooth(method="lm")
```

\## try facet (warp to ,change to different x/y aes we can use scales = "free/ free_y", we can add space = " free")

```{r}
ggplot(data=iris,mapping=aes(x=Petal.Length,y=Petal.Width, color = Species))+
  geom_point()+
  scale_x_continuous(breaks=1:8)+
  geom_smooth(method="lm")+
  facet_wrap(~Species, scales = "free_y")## keep the x same but y is different
```

\## Aesthetic parameter/ mapping(change point size with the number)

```{r}
ggplot(data=iris,mapping=aes(x=Petal.Length,y=Petal.Width))+
  geom_point(aes(color=Species,size= Petal.Width))+
  geom_smooth(method="lm")
```

### Discrete colors

```{r}
ggplot(data=iris,mapping=aes(x=Petal.Length,y=Petal.Width))+
  geom_point(shape =1, aes(color=Species,size=Sepal.Width))+
  geom_smooth(method="lm")+
  scale_color_manual(values=c("red","blue","green"))
```

### comtinuous colors

```{r}
ggplot(data=iris,mapping=aes(x=Petal.Length,y=Petal.Width))+
  geom_point(aes(color=Sepal.Width, size = Species))+
  geom_smooth(method="lm")
```

## Titles

```{r}
ggplot(data=iris,mapping=aes(x=Petal.Length,y=Petal.Width))+
  geom_point(aes(color=Sepal.Width))+
  geom_smooth(method="lm")+
  scale_color_continuous(name="New Legend Title")+
  labs(title="This Is A Title",subtitle="This is a subtitle",x=" Petal Length", 
       y="Petal Width", caption="Figure 1: This is a little caption.")+
theme(plot.caption = element_text(hjust = 0.5))
```

### Axes modification (vi kan anvÃ¤nda scale_x\_continuous)

```{r}
ggplot(data=iris,mapping=aes(x=Petal.Length,y=Petal.Width))+
  geom_point(aes(color=Sepal.Width))+
  geom_smooth(method="lm")+
  scale_color_continuous(name="New Legend Title")+
  scale_x_continuous(breaks=1:8,limits = c(1,8))+
   scale_y_continuous(breaks=1:8)+
  labs(title="This Is A Title",subtitle="This is a subtitle",x=" Petal Length", 
       y="Petal Width", caption="This is a little caption.")
```

### Themes (theme_grey, theme_bw)

```{r}
ggplot(data=iris,mapping=aes(x=Petal.Length,y=Petal.Width))+
  geom_point(aes(color=Sepal.Width))+
  geom_smooth(method="lm")+
  scale_color_continuous(name="New Legend Title")+
  scale_x_continuous(breaks=1:8)+
  labs(title="This Is A Title",subtitle="This is a subtitle",x=" Petal Length", 
       y="Petal Width", caption="This is a little caption.")+
  facet_wrap(~Species, scales = "free")+## both are free
  theme_bw()+
  theme(axis.title =  element_text(color = "Blue", face = "bold"),
        plot.title = element_text(color = "Green", face = "bold", hjust = 0.5),
        plot.subtitle = element_text (color = "Pink"),
        panel.grid = element_blank(),
        plot.caption = element_text(hjust = 0.5),
        legend.position = "right")

```

## Themes can be saved and resued

```{r}
newtheme <- theme(axis.title =  element_text(color = "Blue", face = "bold"),
        plot.title = element_text(color = "Green", face = "bold", hjust = 0.5),
        plot.subtitle = element_text (color = "Pink"),
        panel.grid = element_blank(),
        plot.caption = element_text(hjust = 0.5),
        legend.position = "right")

p<- ggplot(data=iris,mapping=aes(x=Petal.Length,y=Petal.Width))+
  geom_point(aes(color=Sepal.Width))+
  geom_smooth(method="lm")+
  scale_color_continuous(name="New Legend Title")+
  scale_x_continuous(breaks=1:8)+
  labs(title="This Is A Title",subtitle="This is a subtitle",x=" Petal Length", 
       y="Petal Width", caption="This is a little caption.")+
  facet_wrap(~Species, scales = "free")+  ## both are free
  theme_bw()

p+ newtheme
```

##Controlling legends

```{r}
ggplot(data=iris,mapping=aes(x=Petal.Length,y=Petal.Width))+
  geom_point(aes(color=Species,size=Sepal.Width))
```

## turn off the legends

```{r}
ggplot(data=iris,mapping=aes(x=Petal.Length,y=Petal.Width))+
  geom_point(aes(color=Species,size=Sepal.Width))+
  guides(size="none")
```

## turn off all the legends

```{r}
ggplot(data=iris,mapping=aes(x=Petal.Length,y=Petal.Width))+
  geom_point(aes(color=Species,size=Sepal.Width),show.legend=FALSE)
```

### change the postion of legends

```{r}
ggplot(data=iris,mapping=aes(x=Petal.Length,y=Petal.Width))+
  geom_point(aes(color=Species,size=Sepal.Width))+
  theme(legend.position="top",legend.justification="right"
        )
```

## finer manner to modify the legned rows

```{r}
ggplot(data=iris,mapping=aes(x=Petal.Length,y=Petal.Width))+
  geom_point(aes(color=Species,size=Sepal.Width))+
  guides(size=guide_legend(nrow=3,byrow=T),
         color=guide_legend(nrow=3,byrow=T))+
  theme(legend.position="top",
        legend.justification="left"
        )


```

## Labelling

```{r}
ggplot(data=iris,mapping=aes(x=Petal.Length,y=Petal.Width))+
  geom_point(aes(color=Species))+
  geom_text(aes(label=Species,hjust=0),nudge_x=0.5,size=3)
```

### use geom_label

```{r}
ggplot(data=iris,mapping=aes(x=Petal.Length,y=Petal.Width))+
  geom_point(aes(color=Species))+
  geom_label(aes(label=Species,hjust=0),nudge_x=0.5,size=3)
```

### non-overlapping

```{r}
library(ggrepel)
library(ggrepel)
ggplot(data=iris,mapping=aes(x=Petal.Length,y=Petal.Width))+
  geom_point(aes(color=Species))+
  geom_text_repel(aes(label=Species),size=3)
```

##Annotations

```{r}
ggplot(data=iris,mapping=aes(x=Petal.Length,y=Petal.Width))+
  geom_point(aes(color=Species))+
  annotate("text",x=2.5,y=2.1,label="There is a random line here")+
  annotate("segment",x=2,xend=4,y=1.5,yend=2)
```

### interactive

```{r}
p <- ggplot(iris,aes(x=Sepal.Length,y=Sepal.Width,col=Species))
p1 <- p+geom_point()
plotly::ggplotly(p1,width=500,height=400)
```

## ggirph

```{r}
#install.packages("ggiraph")
#library(ggiraph)
p <- ggplot(iris,aes(x=Sepal.Length,y=Sepal.Width,col=Species))
p2 <- p+geom_point_interactive(
  aes(tooltip=paste0("<b>Species: </b>",Species)))+
  theme_bw(base_size=12)
ggiraph(code=print(p2))
getwd()
```
## Barplots
```{r}
ggplot(data=iris,mapping=aes(x=Species,y=Petal.Width))+
  geom_bar(stat="identity")
```
## flip axes
```{r}
ggplot(data=iris,mapping=aes(x=Species,y=Petal.Width))+
  geom_bar(stat="identity")+
  coord_flip()
```
## error bar
```{r}
dfr <- iris %>% group_by(Species) %>% 
  summarise(mean=mean(Sepal.Length),sd=sd(Sepal.Length)) %>%
  mutate(high=mean+sd,low=mean-sd)

ggplot(data=dfr,mapping=aes(x=Species,y=mean,color=Species))+
  geom_point(size=4)+
  geom_errorbar(aes(ymax=high,ymin=low),width=0.2)
```

